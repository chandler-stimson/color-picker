html {
  width: fit-content;
}
body {
  margin: 0;
  display: grid;
  grid-template-columns: min-content 180px;
  overflow: hidden;
}
#inspect {
  display: grid;
  grid-template-rows: 1fr 40px;
}
#inspect > div {
  display: flex;
  align-items: center;
  justify-content: center;
  cursor: pointer;
}
#inspect button {
  background: #ebebeb url("../icons/32.png") center center no-repeat;
  width: 64px;
  height: 64px;
  border: none;
  border-radius: 50%;
  pointer-events: none;
}
#native:hover button {
  background-color: #8fbaff;
}
#toast {
  position: absolute;
  top: 10px;
  right: 10px;
  background-color: #fedb9b;
  color: #ab8445;
  padding: 2px 6px;
}
#toast:empty {
  display: none;
}
#tools {
  display: flex;
  gap: 3px;
  padding-top: 3px; /* align with other tools */
}
#readable,
#samples {
  letter-spacing: 0.07em;
  font-size: 0.75em;
  color: #75797e;
  background: #f1f3f4;
  border-radius: 0.15em;
  padding: 0.45em 0.5em;
  text-decoration: none;
}
#readable {
  /* sets the background for the base class */
  background: rgb(var(--red), var(--green), var(--blue));

  /* calculates perceived lightness using the sRGB Luma method
  Luma = (red * 0.2126 + green * 0.7152 + blue * 0.0722) / 255 */
  --r: calc(var(--red) * 0.2126);
  --g: calc(var(--green) * 0.7152);
  --b: calc(var(--blue) * 0.0722);
  --sum: calc(var(--r) + var(--g) + var(--b));
  --perceived-lightness: calc(var(--sum) / 255);

  /* shows either white or black color depending on perceived darkness */
  color: hsl(0, 0%, calc((var(--perceived-lightness) - var(--threshold)) * -10000000%));
}

/* overwrites */
.pcr-app {
  box-shadow: none;
}
.pcr-app[data-theme='classic'] {
  padding-right: 0;
}
